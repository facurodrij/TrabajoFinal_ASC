# Generated by Django 4.1.3 on 2023-10-24 19:51

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('cuota', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio de la cuota')),
                ('edad_minima', models.PositiveSmallIntegerField(default=0, verbose_name='Edad mínima')),
                ('edad_maxima', models.PositiveSmallIntegerField(default=0, verbose_name='Edad máxima')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
            },
        ),
        migrations.CreateModel(
            name='CuotaSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('fecha_emision', models.DateTimeField(default=datetime.datetime.now, verbose_name='Fecha de emisión')),
                ('fecha_vencimiento', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de vencimiento')),
                ('periodo_mes', models.PositiveSmallIntegerField(choices=[(1, 'Enero'), (2, 'Febrero'), (3, 'Marzo'), (4, 'Abril'), (5, 'Mayo'), (6, 'Junio'), (7, 'Julio'), (8, 'Agosto'), (9, 'Septiembre'), (10, 'Octubre'), (11, 'Noviembre'), (12, 'Diciembre')], verbose_name='Meses')),
                ('periodo_anio', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Año')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total')),
                ('cargo_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cargo extra')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.persona', verbose_name='Persona')),
            ],
            options={
                'verbose_name': 'Cuota social',
                'verbose_name_plural': 'Cuotas sociales',
            },
        ),
        migrations.CreateModel(
            name='PagoCuotaSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('medio_pago', models.CharField(max_length=50, verbose_name='Medio de pago')),
                ('fecha_pago', models.DateField(verbose_name='Fecha de pago')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal')),
                ('interes_aplicado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Interés aplicado')),
                ('total_pagado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total pagado')),
                ('payment_id', models.CharField(max_length=255, unique=True, verbose_name='Payment ID')),
                ('status', models.CharField(max_length=50, verbose_name='Estado')),
                ('status_detail', models.CharField(max_length=255, verbose_name='Detalle del estado')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('date_approved', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación')),
            ],
            options={
                'verbose_name': 'Pago de cuota social',
                'verbose_name_plural': 'Pagos de cuotas sociales',
            },
        ),
        migrations.CreateModel(
            name='Socio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('persona', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.persona')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Socio',
                'verbose_name_plural': 'Socios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edad_minima_titular', models.PositiveSmallIntegerField(default=16, help_text='Edad mínima para no necesitar tutor', verbose_name='Edad mínima para no necesitar tutor')),
                ('dia_emision_cuota', models.PositiveSmallIntegerField(default=7, verbose_name='Día de emisión')),
                ('dia_vencimiento_cuota', models.PositiveSmallIntegerField(default=28, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)], verbose_name='Día de vencimiento')),
                ('cantidad_maxima_cuotas_pendientes', models.PositiveSmallIntegerField(default=3, verbose_name='Cantidad máxima de cuotas pendientes')),
                ('aumento_por_cuota_vencida', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='Porcentaje de aumento por cuota vencida')),
                ('club', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='socio_parameters', to='core.club', verbose_name='Club')),
            ],
            options={
                'verbose_name': 'Parámetro de socio',
                'verbose_name_plural': 'Parámetros de socios',
            },
        ),
        migrations.CreateModel(
            name='PagoCuotaSocialCuotas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interes_aplicado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Interés aplicado')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal')),
                ('total_pagado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total pagado')),
                ('cuota_social', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='socios.cuotasocial')),
                ('pago_cuota_social', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='socios.pagocuotasocial')),
            ],
            options={
                'db_table': 'socios_pagocuotasocial_cuotas',
            },
        ),
        migrations.AddField(
            model_name='pagocuotasocial',
            name='cuotas',
            field=models.ManyToManyField(through='socios.PagoCuotaSocialCuotas', to='socios.cuotasocial', verbose_name='Cuotas sociales'),
        ),
        migrations.CreateModel(
            name='ItemCuotaSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('categoria', models.CharField(max_length=50, verbose_name='Categoría')),
                ('cuota', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cuota')),
                ('cargo_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cargo extra')),
                ('total_parcial', models.DecimalField(decimal_places=2, help_text='Cuota + Cargo extra', max_digits=10, verbose_name='Total parcial')),
                ('cuota_social', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='socios.cuotasocial', verbose_name='Cuota social')),
                ('socio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='socios.socio', verbose_name='Socio')),
            ],
            options={
                'verbose_name': 'Detalle de cuota social',
                'verbose_name_plural': 'Detalles de cuotas sociales',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSocio',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False)),
                ('date_updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('persona', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.persona')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Socio',
                'verbose_name_plural': 'historical Socios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParameters',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('edad_minima_titular', models.PositiveSmallIntegerField(default=16, help_text='Edad mínima para no necesitar tutor', verbose_name='Edad mínima para no necesitar tutor')),
                ('dia_emision_cuota', models.PositiveSmallIntegerField(default=7, verbose_name='Día de emisión')),
                ('dia_vencimiento_cuota', models.PositiveSmallIntegerField(default=28, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)], verbose_name='Día de vencimiento')),
                ('cantidad_maxima_cuotas_pendientes', models.PositiveSmallIntegerField(default=3, verbose_name='Cantidad máxima de cuotas pendientes')),
                ('aumento_por_cuota_vencida', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='Porcentaje de aumento por cuota vencida')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('club', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.club', verbose_name='Club')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Parámetro de socio',
                'verbose_name_plural': 'historical Parámetros de socios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPagoCuotaSocial',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('medio_pago', models.CharField(max_length=50, verbose_name='Medio de pago')),
                ('fecha_pago', models.DateField(verbose_name='Fecha de pago')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal')),
                ('interes_aplicado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Interés aplicado')),
                ('total_pagado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total pagado')),
                ('payment_id', models.CharField(db_index=True, max_length=255, verbose_name='Payment ID')),
                ('status', models.CharField(max_length=50, verbose_name='Estado')),
                ('status_detail', models.CharField(max_length=255, verbose_name='Detalle del estado')),
                ('date_created', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('date_updated', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de actualización')),
                ('date_approved', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Pago de cuota social',
                'verbose_name_plural': 'historical Pagos de cuotas sociales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalItemCuotaSocial',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('categoria', models.CharField(max_length=50, verbose_name='Categoría')),
                ('cuota', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cuota')),
                ('cargo_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cargo extra')),
                ('total_parcial', models.DecimalField(decimal_places=2, help_text='Cuota + Cargo extra', max_digits=10, verbose_name='Total parcial')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cuota_social', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='socios.cuotasocial', verbose_name='Cuota social')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('socio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='socios.socio', verbose_name='Socio')),
            ],
            options={
                'verbose_name': 'historical Detalle de cuota social',
                'verbose_name_plural': 'historical Detalles de cuotas sociales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCuotaSocial',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('fecha_emision', models.DateTimeField(default=datetime.datetime.now, verbose_name='Fecha de emisión')),
                ('fecha_vencimiento', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de vencimiento')),
                ('periodo_mes', models.PositiveSmallIntegerField(choices=[(1, 'Enero'), (2, 'Febrero'), (3, 'Marzo'), (4, 'Abril'), (5, 'Mayo'), (6, 'Junio'), (7, 'Julio'), (8, 'Agosto'), (9, 'Septiembre'), (10, 'Octubre'), (11, 'Noviembre'), (12, 'Diciembre')], verbose_name='Meses')),
                ('periodo_anio', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Año')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total')),
                ('cargo_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cargo extra')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('persona', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.persona', verbose_name='Persona')),
            ],
            options={
                'verbose_name': 'historical Cuota social',
                'verbose_name_plural': 'historical Cuotas sociales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCategoria',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('cuota', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio de la cuota')),
                ('edad_minima', models.PositiveSmallIntegerField(default=0, verbose_name='Edad mínima')),
                ('edad_maxima', models.PositiveSmallIntegerField(default=0, verbose_name='Edad máxima')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Categoría',
                'verbose_name_plural': 'historical Categorías',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name='categoria',
            constraint=models.CheckConstraint(check=models.Q(('cuota__gte', 0)), name='cuota_mayor_igual_cero', violation_error_message='La cuota debe ser mayor o igual a 0.'),
        ),
        migrations.AlterUniqueTogether(
            name='categoria',
            unique_together={('edad_minima', 'edad_maxima')},
        ),
        migrations.AlterUniqueTogether(
            name='pagocuotasocialcuotas',
            unique_together={('pago_cuota_social', 'cuota_social')},
        ),
        migrations.AddConstraint(
            model_name='pagocuotasocial',
            constraint=models.CheckConstraint(check=models.Q(('total_pagado__gte', 0)), name='pago_cuota_social_total_pagado_valido', violation_error_message='Total pagado: El total pagado debe ser mayor o igual a 0.'),
        ),
        migrations.AddConstraint(
            model_name='itemcuotasocial',
            constraint=models.CheckConstraint(check=models.Q(('cuota__gte', 0)), name='detalle_cuota_social_cuota_valida', violation_error_message='Cuota: La cuota debe ser mayor o igual a 0.'),
        ),
        migrations.AddConstraint(
            model_name='itemcuotasocial',
            constraint=models.CheckConstraint(check=models.Q(('cargo_extra__gte', 0)), name='detalle_cuota_social_cargo_extra_valido', violation_error_message='Cargo extra: El cargo extra debe ser mayor o igual a 0.'),
        ),
        migrations.AddConstraint(
            model_name='itemcuotasocial',
            constraint=models.CheckConstraint(check=models.Q(('total_parcial__gte', 0)), name='detalle_cuota_social_total_parcial_valido', violation_error_message='Total parcial: El total parcial debe ser mayor o igual a 0.'),
        ),
        migrations.AddConstraint(
            model_name='cuotasocial',
            constraint=models.CheckConstraint(check=models.Q(('total__gte', 0)), name='cuota_social_total_valido', violation_error_message='Total: El total debe ser mayor o igual a 0.'),
        ),
        migrations.AddConstraint(
            model_name='cuotasocial',
            constraint=models.CheckConstraint(check=models.Q(('cargo_extra__gte', 0)), name='cuota_social_cargo_extra_valido', violation_error_message='Cargo extra: El cargo extra debe ser mayor o igual a 0.'),
        ),
        migrations.AlterUniqueTogether(
            name='cuotasocial',
            unique_together={('persona', 'periodo_mes', 'periodo_anio')},
        ),
    ]
