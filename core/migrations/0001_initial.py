# Generated by Django 4.1.3 on 2023-10-24 19:44

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parameters', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección')),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to=core.models.Club.imagen_directory_path, verbose_name='Logo')),
                ('localidad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parameters.localidad')),
            ],
            options={
                'verbose_name': 'Club',
                'verbose_name_plural': 'Clubes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('cuil', models.CharField(error_messages={'unique': 'Una persona con ese CUIL ya existe.'}, max_length=11, unique=True, verbose_name='CUIL')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=255, verbose_name='Apellido')),
                ('fecha_nacimiento', models.DateField(error_messages={'invalid': 'Formato de fecha de nacimiento inválido.'}, verbose_name='Fecha de nacimiento')),
                ('imagen', models.ImageField(upload_to=core.models.Persona.image_directory_path, verbose_name='Foto carnet')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.club', verbose_name='Club')),
                ('persona_titular', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.persona', verbose_name='Persona titular')),
                ('sexo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parameters.sexo', verbose_name='Sexo')),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPersona',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('cuil', models.CharField(db_index=True, error_messages={'unique': 'Una persona con ese CUIL ya existe.'}, max_length=11, verbose_name='CUIL')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=255, verbose_name='Apellido')),
                ('fecha_nacimiento', models.DateField(error_messages={'invalid': 'Formato de fecha de nacimiento inválido.'}, verbose_name='Fecha de nacimiento')),
                ('imagen', models.TextField(max_length=100, verbose_name='Foto carnet')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('club', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.club', verbose_name='Club')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('persona_titular', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.persona', verbose_name='Persona titular')),
                ('sexo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='parameters.sexo', verbose_name='Sexo')),
            ],
            options={
                'verbose_name': 'historical Persona',
                'verbose_name_plural': 'historical Personas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClub',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección')),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('imagen', models.TextField(blank=True, max_length=100, null=True, verbose_name='Logo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('localidad', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='parameters.localidad')),
            ],
            options={
                'verbose_name': 'historical Club',
                'verbose_name_plural': 'historical Clubes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name='persona',
            constraint=models.CheckConstraint(check=models.Q(('cuil__regex', '^[0-9]{11}$')), name='cuil_valido', violation_error_message='CUIL: Formato de CUIL inválido.'),
        ),
        migrations.AddConstraint(
            model_name='persona',
            constraint=models.CheckConstraint(check=models.Q(('persona_titular__isnull', True), models.Q(('persona_titular_id', models.F('id')), _negated=True), _connector='OR'), name='persona_titular_distinta', violation_error_message='Persona titular: La persona titular no puede ser la misma persona.'),
        ),
        migrations.AddConstraint(
            model_name='persona',
            constraint=models.CheckConstraint(check=models.Q(('nombre__regex', '^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+$')), name='persona_nombre_valido', violation_error_message='Nombre: El nombre solo puede contener letras y espacios.'),
        ),
        migrations.AddConstraint(
            model_name='persona',
            constraint=models.CheckConstraint(check=models.Q(('apellido__regex', '^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+$')), name='persona_apellido_valido', violation_error_message='Apellido: El apellido solo puede contener letras y espacios.'),
        ),
        migrations.AddConstraint(
            model_name='persona',
            constraint=models.CheckConstraint(check=models.Q(('fecha_nacimiento__lte', django.db.models.functions.datetime.Now())), name='persona_fecha_nacimiento_valida', violation_error_message='Fecha de nacimiento: La fecha de nacimiento no puede ser mayor a la fecha actual.'),
        ),
        migrations.AlterUniqueTogether(
            name='club',
            unique_together={('localidad', 'direccion')},
        ),
    ]
